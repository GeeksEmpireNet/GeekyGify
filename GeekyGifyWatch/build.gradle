/*
 * Copyright Â© 2020 By Geeks Empire.
 *
 * Created by Elias Fazel on 10/21/20 4:00 AM
 * Last modified 10/21/20 4:00 AM
 *
 * Licensed Under MIT License.
 * https://opensource.org/licenses/MIT
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "net.geeksempire.geeky.gify"

        minSdkVersion 27
        targetSdkVersion 30

        versionCode 25
        versionName "${majorVersion}." + getDateMonth() + "." + getDateDay() + "." + getDateYear() + ".${versionCode}"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [enableCrashReporting:"true"]
        }
        debug {
            manifestPlaceholders = [enableCrashReporting:"false"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    flavorDimensions "GeekyGify"
    productFlavors {
        productionConfiguration {
            dimension "GeekyGify"

            versionNameSuffix '[WearOS][Watch]'
        }
        betaConfiguration {
            dimension "GeekyGify"

            versionNameSuffix '[WearOS][Watch][BETA]'
        }
    }
}

static def getDateYear() {
    def date = new Date()
    def formattedDate = date.format('yyyy')
    return formattedDate
}

static def getDateMonth() {
    def date = new Date()
    def formattedDate = date.format('MM')
    return formattedDate
}

static def getDateDay() {
    def date = new Date()
    def formattedDate = date.format('dd')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':LikeButtonLibrary')


    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-config:19.2.0'


    implementation 'com.google.android.support:wearable:2.8.1'
    implementation 'com.google.android.gms:play-services-wearable:17.0.0'


    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.wear:wear:1.1.0'
    compileOnly 'com.google.android.wearable:wearable:2.8.1'

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    implementation 'androidx.room:room-runtime:2.2.5'
    implementation 'androidx.room:room-ktx:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'


    implementation 'com.google.android.material:material:1.3.0-alpha03'


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6'


    implementation 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-android-processor:2.26'
    kapt 'com.google.dagger:dagger-compiler:2.26'


    implementation 'com.android.volley:volley:1.1.1'


    implementation 'com.github.bumptech.glide:glide:4.11.0'


    implementation 'com.giphy.sdk:ui:1.2.8'


    implementation 'com.airbnb.android:lottie:3.4.1'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.10"
}
